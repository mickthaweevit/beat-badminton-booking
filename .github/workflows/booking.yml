name: Badminton Court Booking

on:
  schedule:
    - cron: '0 17 * * 0-4'  # Weekdays at 17:00 UTC (00:00 Bangkok time)
  repository_dispatch:
    types: [booking-trigger]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check-config:
    runs-on: ubuntu-latest
    outputs:
      should_book: ${{ steps.check-day.outputs.should_book }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Get configuration
        id: get-config
        run: |
          CONFIG=$(cat booking-config.json)
          echo "Config loaded: $CONFIG"
          
      - name: Check if today should be booked
        id: check-day
        run: |
          DAY_OF_WEEK=$(TZ="Asia/Bangkok" date +%u)  # Get day of week in Bangkok time
          AUTOBOOK_DAYS=$(cat booking-config.json | jq -r '.autobookDays | join(" ")')
          echo "Today is day $DAY_OF_WEEK of the week in Bangkok time"
          echo "Configured days: $AUTOBOOK_DAYS"
          
          # Check if any slots are enabled
          ENABLED_SLOTS=$(cat booking-config.json | jq -r '.slots[] | select(.enabled==true) | .time')
          SLOT_COUNT=$(echo "$ENABLED_SLOTS" | wc -l)
          
          if [[ $AUTOBOOK_DAYS == *"$DAY_OF_WEEK"* ]] && [[ $SLOT_COUNT -gt 0 ]]; then
            echo "should_book=true" >> $GITHUB_OUTPUT
            echo "Will book for today ($SLOT_COUNT enabled slots found)"
          else
            echo "should_book=false" >> $GITHUB_OUTPUT
            if [[ $AUTOBOOK_DAYS != *"$DAY_OF_WEEK"* ]]; then
              echo "Will not book for today (day not in autobookDays)"
            elif [[ $SLOT_COUNT -eq 0 ]]; then
              echo "Will not book for today (no enabled slots found)"
            fi
          fi
  
  book-court:
    needs: check-config
    if: ${{ needs.check-config.outputs.should_book == 'true' || github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Install dependencies
        run: npm install
        
      - name: Run booking script
        env:
          TOKEN: ${{ secrets.TOKEN }}
          DEVICE_ID: ${{ secrets.DEVICE_ID }}
          CARD_ID: ${{ secrets.CARD_ID }}
          SLOT_ID: ${{ secrets.SLOT_ID }}
          CONTACT: ${{ secrets.CONTACT }}
        run: node booking-script.js